name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    # - uses: webfactory/ssh-agent@v0.7.0
    #   with:
    #     ssh-private-key: ${{ secrets.DEPLOY_PRIVATE_KEY }}

    # - name: create ssh folder 
    #   run: mkdir -p ~/.ssh && chmod 700 ~/.ssh 

    # - name: create private key 
    #   run: echo "${{ secrets.DEPLOY_PRIVATE_KEY }}" > ~/.ssh/id_ed25519 && chmod 600 ~/.ssh/id_ed25519
    
    # - name: Prepare Key
    #   uses: webfactory/ssh-agent@v0.5.4
    #   with:
    #     ssh-private-key: ${{ secrets.DEPLOY_PRIVATE_KEY }}

    # - name: Collect Git and SSH config files in a directory that is part of the Docker build context
    #   run: |
    #     mkdir root-config
    #     cp -r ~/.gitconfig  ~/.ssh root-config/

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Get Short SHA
    #   id: vars
    #   run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    
    # - name: Docker meta
    #   id: meta
    #   uses: docker/metadata-action@v4
    #   with:
    #     images: khushalmer/myimg
    
    # - name: Get Epoch
    #   id: epoch
    #   run: echo "epoch=$(date +%s)">> $GITHUB_OUTPUT

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        # context: .
        # volumes:
        #   ~/.ssh:/home/frappe/.ssh
        push: true
        # tags: khushalmer/myimg:develop
        env: DOCKER_BUILDKIT: 1
        run: |
          docker build \
            --build-arg ACCESS_TOKEN=${{ secrets.DEPLOY_PRIVATE_KEY }} \
            -t khushalmer/myimg:develop .

        # -${{ steps.vars.outputs.sha_short }}-${{ steps.epoch.outputs.epoch }}
        # ssh: default=${{ env.SSH_AUTH_SOCK }}
        # ssh: |
        #   default=${{ env.SSH_AUTH_SOCK }}
        # secrets: |
        #   "DEPLOY_PRIVATE_KEY=${{ secrets.DEPLOY_PRIVATE_KEY }}"
      #   build-args: |
      #       FRAPPE_TOKEN=${{ secrets.FRAPPE_TOKEN }}
        
      #   # env:
      #   #   ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      # env:
      #   GIT_AUTH_TOKEN: ${{ secrets.GIT_AUTH_TOKEN }}
